"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../formatting/prettier/utils");
suite('Pint Transformer: Unless Conditions', () => {
    test('pint: it can format unless statements', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeStringWithPint)(`@unless($true)

            @endunless
            
            
            @unless($true) 
                Hello @endunless
            
            @unless($true)
                                    <p>World
                                    
                                    </p>
            
            
            
            
            
                                    
            @endunless
            `).trim(), `@unless ($true)
    
@endunless

@unless ($true)
    Hello
@endunless

@unless ($true)
    <p>World</p>
@endunless`);
    });
    test('pint: it can format nested unless', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeStringWithPint)(`
            @unless($something)
            @unless($somethingTwo)
            @unless($somethingThree)
            @unless($somethingFour)
            <div>
                <p>I am just some {{ $text }}</p>
            </div>
            @endunless
            @endunless
            @endunless
            @endunless`).trim(), `@unless ($something)
    @unless ($somethingTwo)
        @unless ($somethingThree)
            @unless ($somethingFour)
                <div>
                    <p>I am just some {{ $text }}</p>
                </div>
            @endunless
        @endunless
    @endunless
@endunless`);
    });
});
//# sourceMappingURL=formatter_pint_unless.test.js.map