"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../../../formatting/prettier/utils");
const stringUtilities_1 = require("../../../utilities/stringUtilities");
suite('Pint Transformer Acceptance: panels_resources_views_components_footer_blade_php', () => {
    test('pint: it can format panels_resources_views_components_footer_blade_php', () => {
        const input = `{{ filament()->renderHook('footer.before') }}

<div class="filament-footer flex items-center justify-center">
    {{ filament()->renderHook('footer') }}
</div>

{{ filament()->renderHook('footer.after') }}
`;
        const output = `{{ filament()->renderHook('footer.before') }}

<div class="filament-footer flex items-center justify-center">
    {{ filament()->renderHook('footer') }}
</div>

{{ filament()->renderHook('footer.after') }}
`;
        assert_1.default.strictEqual(stringUtilities_1.StringUtilities.normalizeLineEndings((0, utils_1.formatBladeStringWithPint)(input).trim()), stringUtilities_1.StringUtilities.normalizeLineEndings(output.trim()));
        assert_1.default.strictEqual(stringUtilities_1.StringUtilities.normalizeLineEndings((0, utils_1.formatBladeStringWithPint)(output).trim()), stringUtilities_1.StringUtilities.normalizeLineEndings(output.trim()));
    }).timeout(30000);
});
//# sourceMappingURL=panels_resources_views_components_footer_blade_php.test.js.map