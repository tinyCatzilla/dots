"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../formatting/prettier/utils");
suite('Formatting Error Recovery', () => {
    test('it can recover from invalid strings when parsing directive arguments', () => {
        const input = `
<div>

@someDirectiveName(array(
    
    "skills" => [
        "thr'
    ]
))
</div>
`;
        const expected = `<div>
    @someDirectiveName(array(
    
    "skills" => [
        "thr'
    ]
))
</div>
`;
        assert_1.default.strictEqual((0, utils_1.formatBladeString)(input), expected);
    });
    test('it can recover from improperly closed directive arguments', () => {
        // The output isn't great, but it won't delete things at least.
        const input = `
<div><div>
@someDirectiveName(array(
    "name" => "John Doe",
        "age" => 33,
            "address" => "Anytown, USA",
                "skills" => [
                    "one",
                    "two",
                    "three",
                ]
)
</div></div>
`;
        const expected = `<div>
    <div>
        @someDirectiveName
        (array( "name" => "John Doe", "age" => 33, "address" => "Anytown, USA",
        "skills" => [ "one", "two", "three", ] )
    </div>
</div>
`;
        assert_1.default.strictEqual((0, utils_1.formatBladeString)(input), expected);
    });
});
//# sourceMappingURL=formatter_recovery.test.js.map