"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const bladeDocument_1 = require("../document/bladeDocument");
const errorPrinter_1 = require("../document/printers/errorPrinter");
suite('Error Printer Test', () => {
    test('it can pretty print error messages', () => {
        var _a, _b, _c;
        const doc = bladeDocument_1.BladeDocument.fromText(`asdf
asdfasdf
asdfasdffasdf

asdfasdffasdf
asdfasdf
asdf

@if ($something)
    asdfasdf
    asdf`), firstError = doc.errors.getFirstStructureError(), lines = doc.getLinesAround((_c = ((_b = (_a = firstError.node) === null || _a === void 0 ? void 0 : _a.startPosition) === null || _b === void 0 ? void 0 : _b.line)) !== null && _c !== void 0 ? _c : 1), printed = errorPrinter_1.ErrorPrinter.printError(firstError, lines);
        assert_1.default.strictEqual(printed.trim(), `Unpaired condition control structure

  06| asdfasdf
  07| asdf
  08| 
 >09| @if ($something)
  10|     asdfasdf
  11|     asdf`);
    });
});
//# sourceMappingURL=error_printer.test.js.map