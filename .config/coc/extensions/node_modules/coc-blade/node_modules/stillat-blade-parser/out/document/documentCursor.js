"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentCursor = void 0;
const nodeQueries_1 = require("./scanners/nodeQueries");
class DocumentCursor {
    constructor(doc) {
        this.doc = doc;
    }
    getNodeAt(line, char) {
        return nodeQueries_1.NodeQueries.findNodeAtPosition(this.position(line, char), this.doc.getParser().getNodes());
    }
    getNodeBefore(line, char) {
        return nodeQueries_1.NodeQueries.findNodeBeforePosition(this.position(line, char), this.doc.getParser().getNodes());
    }
    getNodeAfter(line, char) {
        return nodeQueries_1.NodeQueries.findNodeAfterPosition(this.position(line, char), this.doc.getParser().getNodes());
    }
    getNodesBefore(line, char) {
        return nodeQueries_1.NodeQueries.findNodesBeforePosition(this.position(line, char), this.doc.getParser().getNodes());
    }
    getNodesAfter(line, char) {
        return nodeQueries_1.NodeQueries.findNodesAfterPosition(this.position(line, char), this.doc.getParser().getNodes());
    }
    position(line, char) {
        return this.doc.getParser().positionFromCursor(line, char);
    }
    charLeftAt(line, char) {
        return this.doc.getParser().charLeftAtCursor(line, char);
    }
    charAt(line, char) {
        return this.doc.getParser().charAtCursor(line, char);
    }
    charRightAt(line, char) {
        return this.doc.getParser().charRightAtCursor(line, char);
    }
    wordLeftAt(line, char, tabSize = 4) {
        return this.doc.getParser().wordLeftAtCursor(line, char, tabSize);
    }
    wordRightAt(line, char, tabSize = 4) {
        return this.doc.getParser().wordRightAtCursor(line, char, tabSize);
    }
    wordAt(line, char, tabSize = 4) {
        return this.doc.getParser().wordAtCursor(line, char, tabSize);
    }
    punctuationLeftAt(line, char, tabSize = 4) {
        return this.doc.getParser().punctuationLeftAtCursor(line, char, tabSize);
    }
    punctuationRightAt(line, char, tabSize = 4) {
        return this.doc.getParser().punctuationRightAtCursor(line, char, tabSize);
    }
}
exports.DocumentCursor = DocumentCursor;
//# sourceMappingURL=documentCursor.js.map