"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const transform_1 = require("./testUtils/transform");
suite('Conditional Element Pair Transform', () => {
    test('it can transform element pairs', () => {
        assert_1.default.strictEqual((0, transform_1.transformString)(`                    <@pair Test @endpair class="something">
<div><p>SOme {{ $title }} text</p>
<p>
@pair <p>Something</p> @endpair
</p>
</div>
    </@pair Test @endpair>`).trim(), `<@pair Test @endpair class="something">
<div><p>SOme {{ $title }} text</p>
<p>
@pair
 <p>Something</p> @endpair

</p>
</div>
    </@pair Test @endpair >`);
    });
});
//# sourceMappingURL=transformer_conditional_element_directive_pair.test.js.map