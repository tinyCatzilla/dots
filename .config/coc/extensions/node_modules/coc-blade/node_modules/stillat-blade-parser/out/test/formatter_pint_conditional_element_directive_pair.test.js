"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../formatting/prettier/utils");
suite('Pint Transformer: Conditional Element Directive Pair', () => {
    test('pint: it can indent directive pairs used as HTML elements', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeStringWithPint)(`                    <@pair Test @endpair class="something">
            <div><p>SOme {{ $title }} text</p>
            <p>
            @pair <p>Something</p> @endpair
            </p>
        </div>
                </@pair Test @endpair>`).trim(), `<@pair Test @endpair class="something">
    <div>
        <p>SOme {{ $title }} text</p>
        <p>
            @pair
                <p>Something</p>
            @endpair
        </p>
    </div>
</@pair Test @endpair>`);
    });
    test('pint: it can indent directives used as HTML elements', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeStringWithPint)(`<@directive >
            <div>
                @directive
            <p>This should be {{    $paired    }}</p>
                @enddirective
        </div>
                </@directive >`).trim(), `<@directive>
    <div>
        @directive
            <p>This should be {{ $paired }}</p>
        @enddirective
    </div>
</@directive>`);
    });
});
//# sourceMappingURL=formatter_pint_conditional_element_directive_pair.test.js.map