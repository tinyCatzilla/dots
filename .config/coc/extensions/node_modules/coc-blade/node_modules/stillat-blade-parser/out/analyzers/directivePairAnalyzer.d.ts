import { AbstractNode, DirectiveNode } from '../nodes/nodes';
import { DocumentParser } from '../parser/documentParser';
export declare class DirectivePairAnalyzer {
    static readonly ForceBreakLimit = 100000;
    private document;
    private parentNode;
    private openDirectiveIndexCount;
    private closingDirectiveIndex;
    private closingDirectiveIndexCount;
    private closingDirectiveNames;
    private createdExecutionBranches;
    private pairsCreated;
    private stackCount;
    private buildCloseIndex;
    private getClosingCandidates;
    private getScanForList;
    associate(documentNodes: AbstractNode[], document: DocumentParser, refParent?: DirectiveNode | null): AbstractNode[];
    private cleanNodes;
    private reduceConditions;
    private findEndOfBranch;
    getPairsCreated(): number;
    private findClosingPair;
}
//# sourceMappingURL=directivePairAnalyzer.d.ts.map