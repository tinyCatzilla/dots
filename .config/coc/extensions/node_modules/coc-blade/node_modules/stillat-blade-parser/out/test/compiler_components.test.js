"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const compilers_1 = require("../compiler/compilers");
const phpCompiler_1 = require("../compiler/phpCompiler");
const bladeDocument_1 = require("../document/bladeDocument");
suite('Blade Components', () => {
    test('components are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@component('foo', ["foo" => "bar"])`), `<?php $__env->startComponent('foo', ["foo" => "bar"]); ?>`);
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@component('foo')`), `<?php $__env->startComponent('foo'); ?>`);
    });
    test('class components are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@component('Test::class', 'test', ["foo" => "bar"])`), `<?php if (isset($component)) { $__componentOriginal35bda42cbf6f9717b161c4f893644ac7a48b0d98 = $component; } ?>
<?php $component = $__env->getContainer()->make(Test::class, ["foo" => "bar"] + (isset($attributes) ? (array) $attributes->getIterator() : [])); ?>
<?php $component->withName('test'); ?>
<?php if ($component->shouldRender()): ?>
<?php $__env->startComponent($component->resolveView(), $component->data()); ?>`);
    });
    test('end components are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@endcomponent`), `<?php echo $__env->renderComponent(); ?>`);
    });
    test('end component classes are compiled', () => {
        const compiler = new phpCompiler_1.PhpCompiler(), componentCompiler = compiler.getCompiler('component');
        componentCompiler.pushHash(compilers_1.ComponentCompiler.newComponentHash('foo'));
        assert_1.default.strictEqual(compiler.compile(bladeDocument_1.BladeDocument.fromText(`@endcomponentClass`)), `'<?php echo $__env->renderComponent(); ?>
<?php endif; ?>
<?php if (isset($__componentOriginal0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33)): ?>
<?php $component = $__componentOriginal0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33; ?>
<?php unset($__componentOriginal0beec7b5ea3f0fdbc95d0dd47f3c5bc275da8a33); ?>
<?php endif; ?>`);
    });
    test('slots are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@slot('foo', null, ["foo" => "bar"])`), `<?php $__env->slot('foo', null, ["foo" => "bar"]); ?>`);
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@slot('foo')`), `<?php $__env->slot('foo'); ?>`);
    });
    test('end slots are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@endslot`), `<?php $__env->endSlot(); ?>`);
    });
});
//# sourceMappingURL=compiler_components.test.js.map