"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade While Statements', () => {
    test('while statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@while ($foo)
test
@endwhile`), `<?php while($foo): ?>
test
<?php endwhile; ?>`);
    });
    test('nested while statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@while ($foo)
@while ($bar)
test
@endwhile
@endwhile`), `<?php while($foo): ?>
<?php while($bar): ?>
test
<?php endwhile; ?>
<?php endwhile; ?>`);
    });
});
//# sourceMappingURL=compiler_while.test.js.map