"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade For Statements', () => {
    test('for statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@for ($i = 0; $i < 10; $i++)
test
@endfor`), `<?php for($i = 0; $i < 10; $i++): ?>
test
<?php endfor; ?>`);
    });
    test('nested for statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@for ($i = 0; $i < 10; $i++)
@for ($j = 0; $j < 20; $j++)
test
@endfor
@endfor`), `<?php for($i = 0; $i < 10; $i++): ?>
<?php for($j = 0; $j < 20; $j++): ?>
test
<?php endfor; ?>
<?php endfor; ?>`);
    });
});
//# sourceMappingURL=compiler_for.test.js.map