"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../../../formatting/prettier/utils");
const stringUtilities_1 = require("../../../utilities/stringUtilities");
suite('Pint Transformer Acceptance: support_resources_views_components_input_select_blade_php', () => {
    test('pint: it can format support_resources_views_components_input_select_blade_php', () => {
        const input = `@props([
    'error' => false,
    'prefix' => false,
    'size' => 'md',
    'suffix' => false,
])

<select
    {{ $attributes->class([
        'filament-select-input text-gray-900 block transition duration-75 shadow-sm outline-none sm:text-sm focus:ring-1 focus:ring-inset disabled:opacity-70 dark:bg-gray-700 dark:text-white',
        'h-9 py-1' => $size === 'sm',
        'border-gray-300 focus:border-primary-500 focus:ring-primary-500 dark:border-gray-600 dark:focus:border-primary-500' => ! $error,
        'border-danger-600 ring-danger-600 dark:border-danger-400 dark:ring-danger-400' => $error,
        'rounded-s-lg' => ! $prefix,
        'rounded-e-lg' => ! $suffix,
    ]) }}
>
    {{ $slot }}
</select>
`;
        const output = `@props([
    'error' => false,
    'prefix' => false,
    'size' => 'md',
    'suffix' => false,
])

<select
    {{
        $attributes->class([
            'filament-select-input block text-gray-900 shadow-sm outline-none transition duration-75 focus:ring-1 focus:ring-inset disabled:opacity-70 dark:bg-gray-700 dark:text-white sm:text-sm',
            'h-9 py-1' => $size === 'sm',
            'focus:border-primary-500 focus:ring-primary-500 dark:focus:border-primary-500 border-gray-300 dark:border-gray-600' => ! $error,
            'border-danger-600 ring-danger-600 dark:border-danger-400 dark:ring-danger-400' => $error,
            'rounded-s-lg' => ! $prefix,
            'rounded-e-lg' => ! $suffix,
        ])
    }}
>
    {{ $slot }}
</select>
`;
        assert_1.default.strictEqual(stringUtilities_1.StringUtilities.normalizeLineEndings((0, utils_1.formatBladeStringWithPint)(input).trim()), stringUtilities_1.StringUtilities.normalizeLineEndings(output.trim()));
        assert_1.default.strictEqual(stringUtilities_1.StringUtilities.normalizeLineEndings((0, utils_1.formatBladeStringWithPint)(output).trim()), stringUtilities_1.StringUtilities.normalizeLineEndings(output.trim()));
    }).timeout(30000);
});
//# sourceMappingURL=support_resources_views_components_input_select_blade_php.test.js.map