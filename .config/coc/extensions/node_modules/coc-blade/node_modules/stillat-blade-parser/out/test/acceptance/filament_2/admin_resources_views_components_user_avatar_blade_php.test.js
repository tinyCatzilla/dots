"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../../../formatting/prettier/utils");
const stringUtilities_1 = require("../../../utilities/stringUtilities");
suite('Pint Transformer Acceptance: admin_resources_views_components_user_avatar_blade_php', () => {
    test('pint: it can format admin_resources_views_components_user_avatar_blade_php', () => {
        const input = `@props([
    'user' => \\Filament\\Facades\\Filament::auth()->user(),
])

<div
    {{ $attributes->class([
        'w-10 h-10 rounded-full bg-gray-200 bg-cover bg-center',
        'dark:bg-gray-900' => config('filament.dark_mode'),
    ]) }}
    style="background-image: url('{{ \\Filament\\Facades\\Filament::getUserAvatarUrl($user) }}')"
></div>
`;
        const output = `@props([
    'user' => \\Filament\\Facades\\Filament::auth()->user(),
])

<div
    {{
        $attributes->class([
            'h-10 w-10 rounded-full bg-gray-200 bg-cover bg-center',
            'dark:bg-gray-900' => config('filament.dark_mode'),
        ])
    }}
    style="
        background-image: url('{{ \\Filament\\Facades\\Filament::getUserAvatarUrl($user) }}');
    "
></div>
`;
        assert_1.default.strictEqual(stringUtilities_1.StringUtilities.normalizeLineEndings((0, utils_1.formatBladeStringWithPint)(input).trim()), stringUtilities_1.StringUtilities.normalizeLineEndings(output.trim()));
        assert_1.default.strictEqual(stringUtilities_1.StringUtilities.normalizeLineEndings((0, utils_1.formatBladeStringWithPint)(output).trim()), stringUtilities_1.StringUtilities.normalizeLineEndings(output.trim()));
    }).timeout(30000);
});
//# sourceMappingURL=admin_resources_views_components_user_avatar_blade_php.test.js.map