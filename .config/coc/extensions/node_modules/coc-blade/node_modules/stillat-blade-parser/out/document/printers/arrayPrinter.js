"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArrayPrinter = void 0;
const nodes_1 = require("../../nodes/nodes");
const stringBuffer_1 = require("./stringBuffer");
class ArrayPrinter {
    static print(array, tabSize, level) {
        const arrayBuffer = new stringBuffer_1.StringBuffer(tabSize, level);
        arrayBuffer.append('[').newLine();
        if (array.elements.length > 0) {
            let trailingWs = '';
            arrayBuffer.indent();
            array.elements.forEach((element) => {
                if (array.maxKeyLength > 0 && element.key != null) {
                    trailingWs = '';
                }
                if (element.key != null) {
                    arrayBuffer.append(element.key.sourceContent + trailingWs).append(' => ');
                    if (element.value != null) {
                        if (element.value instanceof nodes_1.ArrayNode) {
                            if (element.value.elements.length == 0) {
                                arrayBuffer.append('[],');
                            }
                            else {
                                arrayBuffer.append(ArrayPrinter.print(element.value, tabSize, level + 1));
                            }
                        }
                        else {
                            arrayBuffer.append(element.value.sourceContent);
                        }
                    }
                }
                else {
                    if (element.value != null) {
                        if (element.value instanceof nodes_1.ArrayNode) {
                            arrayBuffer.append(ArrayPrinter.print(element.value, tabSize, level + 1));
                        }
                        else {
                            arrayBuffer.append(element.value.sourceContent);
                        }
                    }
                }
                arrayBuffer.appendNoRepeat(',').newLine();
                if (!element.isLast) {
                    arrayBuffer.indent();
                }
            });
        }
        if (level > 1) {
            arrayBuffer.outdent();
        }
        arrayBuffer.append(']');
        return arrayBuffer.getContents();
    }
}
exports.ArrayPrinter = ArrayPrinter;
//# sourceMappingURL=arrayPrinter.js.map