"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade Js', () => {
    test('statement is compiled without any options', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('<div x-data="@js($data)"></div>'), '<div x-data="<?php echo \\Illuminate\\Support\\Js::from($data)->toHtml() ?>"></div>');
    });
    test('json flags can be set', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('<div x-data="@js($data, JSON_FORCE_OBJECT)"></div>'), '<div x-data="<?php echo \\Illuminate\\Support\\Js::from($data, JSON_FORCE_OBJECT)->toHtml() ?>"></div>');
    });
    test('encoding depth can be set', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('<div x-data="@js($data, JSON_FORCE_OBJECT, 256)"></div>'), '<div x-data="<?php echo \\Illuminate\\Support\\Js::from($data, JSON_FORCE_OBJECT, 256)->toHtml() ?>"></div>');
    });
});
//# sourceMappingURL=compiler_js.test.js.map