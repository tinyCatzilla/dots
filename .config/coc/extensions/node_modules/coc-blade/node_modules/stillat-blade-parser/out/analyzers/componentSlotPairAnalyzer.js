"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComponentSlotPairAnalyzer = void 0;
const nodes_1 = require("../nodes/nodes");
class ComponentSlotPairAnalyzer {
    static findClosingTag(nodes, index, node) {
        var _a, _b;
        let refCount = 0;
        if (((_a = node.name) === null || _a === void 0 ? void 0 : _a.inlineName) != null && node.name.inlineName != '') {
            node.isShorthandSlot = true;
        }
        for (let i = index; i < nodes.length; i++) {
            const candidate = nodes[i];
            if (candidate instanceof nodes_1.BladeComponentNode) {
                if (candidate.isClosedBy != null || candidate.isOpenedBy != null) {
                    continue;
                }
                if (((_b = candidate.name) === null || _b === void 0 ? void 0 : _b.name) == 'slot') {
                    if (candidate.isSelfClosing == false && candidate.isClosingTag == false) {
                        refCount += 1;
                        continue;
                    }
                    else if (candidate.isSelfClosing == false && candidate.isClosingTag) {
                        refCount -= 1;
                        if (refCount > 0) {
                            continue;
                        }
                        node.isClosedBy = candidate;
                        candidate.isOpenedBy = node;
                        break;
                    }
                }
            }
        }
    }
    static pairComponents(nodes) {
        var _a;
        for (let i = 0; i < nodes.length; i += 1) {
            const node = nodes[i];
            if (node instanceof nodes_1.BladeComponentNode) {
                if (((_a = node.name) === null || _a === void 0 ? void 0 : _a.name) == 'slot' && node.isSelfClosing == false && node.isClosingTag == false) {
                    ComponentSlotPairAnalyzer.findClosingTag(nodes, i, node);
                }
            }
        }
        return nodes;
    }
}
exports.ComponentSlotPairAnalyzer = ComponentSlotPairAnalyzer;
//# sourceMappingURL=componentSlotPairAnalyzer.js.map