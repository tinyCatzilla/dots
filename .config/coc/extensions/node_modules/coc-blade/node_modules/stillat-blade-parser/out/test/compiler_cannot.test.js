"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade Cannot Statements', () => {
    test('cannot statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@cannot ('update', [$post])
breeze
@elsecannot('delete', [$post])
sneeze
@endcannot`), `<?php if (app(\\Illuminate\\Contracts\\Auth\\Access\\Gate::class)->denies('update', [$post])): ?>
breeze
<?php elseif (app(\\Illuminate\\Contracts\\Auth\\Access\\Gate::class)->denies('delete', [$post])): ?>
sneeze
<?php endif; ?>`);
    });
});
//# sourceMappingURL=compiler_cannot.test.js.map