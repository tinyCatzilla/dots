"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const bladeDocument_1 = require("../document/bladeDocument");
suite('Fragment Structures', () => {
    test('it can detect when <style> and <script> contain structures', () => {
        const nodes = bladeDocument_1.BladeDocument.fromText(`
<html>
<style>
    .thing {
        background-color: @foreach ($something as $somethingElse)
            {{ $thing}}
        @endforeach
    }
</style>

<style></style>
<body>


<script>
    var app = '@if ($something) something @else something-else @endif'.trim();
</script>

<script></script>

</body>

</html>`).getParser().getFragments();
        const style1 = nodes[1], style2 = nodes[3], script1 = nodes[6], script2 = nodes[8];
        assert_1.default.strictEqual(style1.name, 'style');
        assert_1.default.strictEqual(style1.containsStructures, true);
        assert_1.default.strictEqual(style2.name, 'style');
        assert_1.default.strictEqual(style2.containsStructures, false);
        assert_1.default.strictEqual(script1.name, 'script');
        assert_1.default.strictEqual(script1.containsStructures, true);
        assert_1.default.strictEqual(script2.name, 'script');
        assert_1.default.strictEqual(script2.containsStructures, false);
    });
});
//# sourceMappingURL=fragment_structures.test.js.map