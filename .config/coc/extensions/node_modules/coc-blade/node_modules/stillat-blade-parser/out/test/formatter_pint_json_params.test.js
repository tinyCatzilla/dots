"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../formatting/prettier/utils");
suite('Pint Transformer: JSON Parameters', () => {
    test('pint: it can detect and format JSON parameters in directives', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeStringWithPint)(`@varSet({
                "logo": 
                
                "logo",
                "width":             78,
                "height":
                         22
            })
            
            
            @varSet( $test +        $thing + $another - ($that + $something))`).trim(), `@varSet({
  "logo": "logo",
  "width": 78,
  "height": 22
})

@varSet($test + $thing + $another - ($that + $something))`);
    });
    test('pint: it ignores invalid JSON when formatting', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeStringWithPint)(`@varSet({
"logo": 

"logo",
"width":     :::::        78,
"height":
22
})


@varSet( $test +        $thing + $another - ( $that + $something   ))`).trim(), `@varSet({
"logo": 

"logo",
"width":     :::::        78,
"height":
22
})

@varSet($test + $thing + $another - ($that + $something))`);
    });
});
//# sourceMappingURL=formatter_pint_json_params.test.js.map