"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade If Statements', () => {
    test('if statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@if (name(foo(bar)))
breeze
@endif`), `<?php if(name(foo(bar))): ?>
breeze
<?php endif; ?>`);
    });
    test('switch statements are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`@switch(true)
@case(1)
foo

@case(2)
bar
@endswitch

foo

@switch(true)
@case(1)
foo

@case(2)
bar
@endswitch`), `<?php switch (true)
case (1): ?>

foo

<?php case(2): ?>
bar
<?php endswitch; ?>

foo

<?php switch (true)
case (1): ?>

foo

<?php case(2): ?>
bar
<?php endswitch; ?>`);
    });
});
//# sourceMappingURL=compiler_if.test.js.map