"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const utils_1 = require("../formatting/prettier/utils");
suite('<style> Containing Structures', () => {
    test('it preserves relative indents when formatting style tags', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeString)(`<html><head>
            @directive($test)
            
                    @enddirective
            
                <style>
                                            
                                .thing {
                                    background-color: @foreach ($something as $somethingElse)
                                        {{ $thing}}
                                    @endforeach
                                }
                
                                </style>
                    </head>        </html>`).trim(), `<html>
    <head>
        @directive($test)
            
        @enddirective

        <style>
            .thing {
                background-color: @foreach ($something as $somethingElse)
                    {{ $thing }}
                @endforeach
            }
        </style>
    </head>
</html>`);
    });
    test('it can apply relative indent to styles inside structures', () => {
        assert_1.default.strictEqual((0, utils_1.formatBladeString)(`<html>

            <body>
        
        @if ($true)
            <style>
                        
        
        
        
        .thing {
            background-color: @foreach ($something as $somethingElse)
                {{ $thing}}
            @endforeach
        }
        
            </style>
        
        @endif
        
                <script></script>
            </body>
        </html>`).trim(), `<html>
    <body>
        @if ($true)
            <style>
                .thing {
                    background-color: @foreach ($something as $somethingElse)
                        {{ $thing }}
                    @endforeach
                }
            </style>
        @endif

        <script></script>
    </body>
</html>`);
    });
});
//# sourceMappingURL=formatter_style_structures.test.js.map