"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade Json', () => {
    test('statement is compiled with safe default encoding options', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('var foo = @json($var);'), 'var foo = <?php echo json_encode($var, 15, 512) ?>;');
    });
    test('encoding options can be overwritten', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('var foo = @json($var, JSON_HEX_TAG);'), 'var foo = <?php echo json_encode($var, JSON_HEX_TAG, 512) ?>;');
    });
});
//# sourceMappingURL=compiler_json.test.js.map