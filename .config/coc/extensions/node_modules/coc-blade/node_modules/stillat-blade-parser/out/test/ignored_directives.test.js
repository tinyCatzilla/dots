"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const bladeDocument_1 = require("../document/bladeDocument");
const nodes_1 = require("../nodes/nodes");
const assertions_1 = require("./testUtils/assertions");
suite('Ignored Directives', () => {
    test('it can ignore CSS media', () => {
        const nodes = bladeDocument_1.BladeDocument.fromText(`
@media()

@mediaThing()`).getAllNodes();
        (0, assertions_1.assertCount)(2, nodes);
        (0, assertions_1.assertInstanceOf)(nodes_1.LiteralNode, nodes[0]);
        (0, assertions_1.assertInstanceOf)(nodes_1.DirectiveNode, nodes[1]);
        (0, assertions_1.assertLiteralContent)("\n@media()\n\n", nodes[0]);
        const directive = nodes[1];
        assert_1.default.strictEqual(directive.directiveName, 'mediaThing');
    });
    test('it does not get confused with whitespace', () => {
        const nodes = bladeDocument_1.BladeDocument.fromText(`
@media () @charset
            @media
@media                ()   @keyframes(

)
@media`).getAllNodes();
        (0, assertions_1.assertCount)(1, nodes);
        (0, assertions_1.assertInstanceOf)(nodes_1.LiteralNode, nodes[0]);
    });
});
//# sourceMappingURL=ignored_directives.test.js.map