import { AbstractNode, DirectiveNode } from '../nodes/nodes';
export declare class PairManager {
    private static possibleClosingNode;
    static alwaysRewrite: string[];
    static customIfs: Map<string, number>;
    private static speculativeConditions;
    private static speculativeEndIfs;
    static clearSpeculativeConditions(): void;
    static clearSpeculativeEndIfs(): void;
    static getSpeculativeConditions(): Map<string, number>;
    static getSpeculativeEndIfs(): Map<string, number>;
    static isSpeculativeCondition(name: string): boolean;
    static isSpeculativeEndIf(name: string): boolean;
    static registerSpeculativeCondition(name: string): void;
    static registerSpeculativeEndIf(name: string): void;
    static canClose(directive: DirectiveNode): boolean;
    static shouldRewrite(node: DirectiveNode): boolean;
    static determineCandidates(nodes: AbstractNode[]): void;
}
//# sourceMappingURL=pairManager.d.ts.map