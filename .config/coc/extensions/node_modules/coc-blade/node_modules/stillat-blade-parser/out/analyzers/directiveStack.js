"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectiveStack = void 0;
const nodes_1 = require("../nodes/nodes");
class DirectiveStack {
    static setChildTypeCounts(nodes) {
        nodes.forEach((node) => {
            if (node instanceof nodes_1.DirectiveNode == false) {
                return;
            }
            const directive = node;
            directive.getImmediateChildren().forEach((child) => {
                let childType = '*unknown', parentIndex = 0;
                if (child instanceof nodes_1.LiteralNode) {
                    childType = '*literal';
                }
                else if (child instanceof nodes_1.BladeEntitiesEchoNode) {
                    childType = '*entities_echo';
                }
                else if (child instanceof nodes_1.BladeEscapedEchoNode) {
                    childType = '*escaped_echo';
                }
                else if (child instanceof nodes_1.BladeEchoNode) {
                    childType = '*echo';
                }
                else if (child instanceof nodes_1.BladeVerbatimNode) {
                    childType = '*verbatim';
                }
                else if (child instanceof nodes_1.DirectiveNode) {
                    childType = child.directiveName;
                }
                if (directive.childTypeCounts.has(childType) == false) {
                    directive.childTypeCounts.set(childType, 0);
                }
                const curCount = directive.childTypeCounts.get(childType), relativeCount = curCount + 1;
                directive.childTypeCounts.set(childType, relativeCount);
                child.parentTypeIndex = relativeCount;
                child.parentIndex = parentIndex;
                parentIndex += 1;
            });
        });
    }
}
exports.DirectiveStack = DirectiveStack;
//# sourceMappingURL=directiveStack.js.map