import { BladeDocument } from '../document/bladeDocument';
import { NodeCompiler } from './nodeCompiler';
import { ComponentTagCompiler } from './componentTagCompiler';
export declare class PhpCompiler {
    private directiveCompilers;
    private componentCompiler;
    private compileComponentBlade;
    private unknownDirectiveCompiler;
    private registerDefaults;
    setCompileComponentTagBlade(compileBlade: boolean): this;
    getComponentCompiler(): ComponentTagCompiler;
    registerCompilers(compilers: Map<string, NodeCompiler>): this;
    setUnknownDirectiveCompiler(compiler: NodeCompiler | null): this;
    clone(): PhpCompiler;
    constructor();
    registerCompiler(directiveName: string, compiler: NodeCompiler): this;
    getCompiler(directiveName: string): NodeCompiler | null;
    static compileString(template: string): string;
    compile(document: BladeDocument): string;
}
//# sourceMappingURL=phpCompiler.d.ts.map