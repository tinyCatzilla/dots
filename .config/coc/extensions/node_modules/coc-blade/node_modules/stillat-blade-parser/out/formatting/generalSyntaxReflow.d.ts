import { AbstractNode } from '../nodes/nodes';
import { StringIterator } from '../parser/stringIterator';
export declare class GeneralSyntaxReflow implements StringIterator {
    private content;
    private chars;
    private inputLen;
    private prev;
    private cur;
    private next;
    private currentIndex;
    private currentContent;
    private tokens;
    private static breakOperators;
    static instance: GeneralSyntaxReflow;
    advance(count: number): void;
    encounteredFailure(): void;
    updateIndex(index: number): void;
    inputLength(): number;
    getCurrentIndex(): number;
    incrementIndex(): void;
    getCurrent(): string | null;
    getNext(): string | null;
    getPrev(): string | null;
    checkCurrentOffsets(): void;
    pushChar(value: string): void;
    getChar(index: number): string;
    getSeedOffset(): number;
    getContentSubstring(from: number, length: number): string;
    getTokens(): AbstractNode[];
    static couldReflow(input: string): boolean;
    safeReflow(input: string): string;
    parse(text: string): void;
    reflow(input: string): string;
}
//# sourceMappingURL=generalSyntaxReflow.d.ts.map