import { ArrayNode } from '../nodes/nodes';
import { StringIterator } from './stringIterator';
export declare class SimpleArrayParser implements StringIterator {
    private content;
    private chars;
    private inputLen;
    private prev;
    private cur;
    private next;
    private currentIndex;
    private currentContent;
    private tokens;
    private createdArrays;
    private keyValueTokens;
    private elements;
    advance(count: number): void;
    encounteredFailure(): void;
    updateIndex(index: number): void;
    inputLength(): number;
    getCurrentIndex(): number;
    incrementIndex(): void;
    getCurrent(): string | null;
    getNext(): string | null;
    getPrev(): string | null;
    checkCurrentOffsets(): void;
    pushChar(value: string): void;
    getChar(index: number): string;
    getSeedOffset(): number;
    getContentSubstring(from: number, length: number): string;
    getNumberOfElements(): number;
    getNumberOfKeyValuePairs(): number;
    getIsAssoc(): boolean;
    private checkCurrentContent;
    parse(text: string): ArrayNode | null;
    private fillArrayDetails;
    private parseArrays;
    private createArray;
    private findEndOfArray;
}
//# sourceMappingURL=simpleArrayParser.d.ts.map