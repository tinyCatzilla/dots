"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade Lang', () => {
    test('statement that contains non consecutive parenthesis are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString("Foo @lang(function_call('foo(blah)')) bar"), "Foo <?php echo app('translator')->get(function_call('foo(blah)')); ?> bar");
    });
    test('language and choices are compiled', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString("@lang('foo')"), '<?php echo app(\'translator\')->get(\'foo\'); ?>');
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString("@choice('foo', 1)"), '<?php echo app(\'translator\')->choice(\'foo\', 1); ?>');
    });
});
//# sourceMappingURL=compiler_lang.test.js.map