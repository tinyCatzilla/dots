"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const assert_1 = __importDefault(require("assert"));
const phpCompiler_1 = require("../compiler/phpCompiler");
suite('Blade Expression Test', () => {
    test('expressions on the same line', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('@lang(foo(bar(baz(qux(breeze()))))) space () @lang(foo(bar))'), `<?php echo app('translator')->get(foo(bar(baz(qux(breeze()))))); ?> space () <?php echo app('translator')->get(foo(bar)); ?>`);
    });
    test('expression within html', () => {
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('<html {{ $foo }}>'), '<html <?php echo e($foo); ?>>');
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString('<html{{ $foo }}>'), '<html<?php echo e($foo); ?>>');
        assert_1.default.strictEqual(phpCompiler_1.PhpCompiler.compileString(`<html {{ $foo }} @lang('foo')>`), '<html <?php echo e($foo); ?> <?php echo app(\'translator\')->get(\'foo\'); ?>>');
    });
});
//# sourceMappingURL=compiler_expression.test.js.map