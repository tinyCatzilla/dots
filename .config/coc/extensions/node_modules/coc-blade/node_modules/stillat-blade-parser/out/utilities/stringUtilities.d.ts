export declare class StringUtilities {
    static normalizeLineEndings(string: string, to?: string): string;
    static split(text: string): string[];
    static substring(text: string, start: number, length: number): string;
    static ctypeSpace(char: string | null): boolean;
    static ctypeAlpha(char: string | null): boolean;
    static ctypeDigit(char: string | null): boolean;
    static ctypePunct(char: string | null): boolean;
    static trimLeft(value: string, charList?: string): string;
    static trimRight(value: string, charList?: string): string;
    static isNumeric(string: string): boolean;
    static substringCount(haystack: string, needle: string): number;
    static lastWord(value: string): string;
    static breakByNewLine(value: string): string[];
    static removeEmptyNewLines(value: string): string;
    static replaceAllInString(value: string, oldString: string, newString: string): string;
    static getTrimmedMatch(expression: RegExp, value: string, index: number): string | null;
    static assertMatchIs(expression: RegExp, value: string, index: number, testValue: string): boolean;
    static truncateString(str: string, num: number): string;
    static unwrapString(value: string): string;
    static getLastLine(content: string): string;
    static getFirstLine(content: string): string;
    static collapse(content: string): string;
    static makeSlug(length: number): string;
    static replaceWithFillerExceptNewlines(input: string): string;
    static safeReplaceAllInString(originalString: string, searchValue: string, replaceValue: string): string;
    static safeReplace(originalString: string, searchValue: string, replaceValue: string): string;
}
//# sourceMappingURL=stringUtilities.d.ts.map