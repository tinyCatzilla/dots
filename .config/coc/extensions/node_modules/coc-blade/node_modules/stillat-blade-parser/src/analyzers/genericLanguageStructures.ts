export class GenericLanguageStructures {
    static readonly IfStatement = 'if';
    static readonly CallStatement = 'call';
    static readonly TernaryStatement = 'ternary';
    static readonly Addition = 'addition';
    static readonly Substraction = 'subtraction';
    static readonly Multiplication = 'multiplication';
    static readonly Division = 'division';
    static readonly Modulus = 'modulus';
    static readonly Exponentiation = 'exponentiation';
    static readonly BinCompare = 'compare';
    static readonly Concat = 'concat';
    static readonly GreaterThan = 'greater_than';
    static readonly GreaterThanEqual = 'greater_than_equal';
    static readonly LessThan = 'less_than';
    static readonly LessThanEqual = 'less_than_equal';
    static readonly BitwiseAnd = 'bitwise_and';
    static readonly BitwiseOr = 'bitiwse_or';
    static readonly BitwiseXor = 'bitiwse_xor';
    static readonly LeftShift = 'left_shift';
    static readonly RightShift = 'right_shift';
    static readonly Equality = 'equality';
    static readonly Identity = 'identitiy';
    static readonly Inequality = 'inequality';
    static readonly NotIdentity = 'not_identity';
    static readonly CompAnd = 'and';
    static readonly CompOr = 'or';
    static readonly Xor = 'xor';

    static readonly Assignment = 'assign';
    static readonly AdditionAssignment = 'assign_addition';
    static readonly SubtractionAssignment = 'assign_subtraciton';
    static readonly MultiplicationAssignment = 'assign_multiplication';
    static readonly DivisionAssignment = 'assign_division';
    static readonly ModulusAssignment = 'assign_modulus';
    static readonly ConcatenationAssignment = 'assign_concat';
    static readonly BitwiseAndAssignment = 'assign_bitwise_and';
    static readonly BitwiseOrAssignment = 'assign_bitwise_or';
    static readonly BitwiseXorAssignment = 'assign_bitwise_xor';
    static readonly LeftShiftAssignment = 'assign_left_shift';
    static readonly RightShiftAssignment = 'assign_right_shift';
}