{"resultMapping":"[[\"__pint2\",\"\\n\\n$isListWithLineBreaks = $isListWithLineBreaks();\\n\\n$isBadge = $isBadge();\\n\\n$isProse = $isProse();\\n\\n$arrayState = $getState();\\n\\nif ($arrayState instanceof \\\\Illuminate\\\\Support\\\\Collection) {\\n    $arrayState = $arrayState->all();\\n}\\n\\nif (is_array($arrayState)) {\\n    if ($listLimit = $getListLimit()) {\\n        $limitedArrayState = array_slice($arrayState, $listLimit);\\n        $arrayState = array_slice($arrayState, 0, $listLimit);\\n    }\\n\\n    if ((! $isListWithLineBreaks) && (! $isBadge)) {\\n        $arrayState = implode(\\n            ', ',\\n            array_map(\\n                fn ($value) => $value instanceof \\\\Filament\\\\Support\\\\Contracts\\\\HasLabel ? $value->getLabel() : $value,\\n                $arrayState,\\n            ),\\n        );\\n    }\\n}\\n$arrayState = \\\\Illuminate\\\\Support\\\\Arr::wrap($arrayState);\\n\\n$canWrap = $canWrap();\\n\\n$iconPosition = $getIconPosition();\\n$iconSize = $isBadge ? 'h-3 w-3' : 'h-4 w-4';\\n\\n$url = $getUrl();\\n\\n$isCopyable = $isCopyable();\\n$copyMessage = $getCopyMessage();\\n$copyMessageDuration = $getCopyMessageDuration();\"],[\"__pint9\",\"\\n\\n$formattedState = $formatState($state);\\n$icon = $getIcon($state);\"],[\"__pint0\",\"$getEntryWrapperView()\"],[\"__pint1\",\"$entry\"],[\"__pint3\",\"$getPrefixActions()\"],[\"__pint4\",\"$getSuffixActions()\"],[\"__pint5\",\"[\\n    'filament-infolists-text-entry',\\n    'text-primary-600 transition hover:underline hover:text-primary-500 focus:underline focus:text-primary-500' => $url && (! $isBadge),\\n]\"],[\"__pint6\",\"\\\\Filament\\\\Support\\\\prepare_inherited_attributes($getExtraAttributeBag())\"],[\"__pint7\",\"$isListWithLineBreaks ? 'ul' : 'div'\"],[\"__pint8\",\"[\\n    'list-inside list-disc' => $isBulleted(),\\n    'flex flex-wrap gap-1' => $isBadge,\\n]\"],[\"__pint10\",\"filled($formattedState)\"],[\"__pint11\",\"$isListWithLineBreaks ? 'li' : 'div'\"],[\"__pint12\",\"[\\n    'inline-flex items-center space-x-1 rtl:space-x-reverse',\\n    'min-h-6 justify-center whitespace-nowrap rounded-xl px-2 py-0.5' => $isBadge,\\n    'prose dark:prose-invert max-w-none' => $isProse,\\n    'whitespace-normal' => $canWrap,\\n    ($isBadge ? match ($color = $getColor($state)) {\\n        'danger' => 'text-danger-700 bg-danger-500/10 dark:text-danger-500',\\n        'gray', null => 'bg-gray-500/10 text-gray-700 dark:bg-gray-500/20 dark:text-gray-300',\\n        'info' => 'text-info-700 bg-info-500/10 dark:text-info-500',\\n        'primary' => 'text-primary-700 bg-primary-500/10 dark:text-primary-500',\\n        'secondary' => 'text-secondary-700 bg-secondary-500/10 dark:text-secondary-500',\\n        'success' => 'text-success-700 bg-success-500/10 dark:text-success-500',\\n        'warning' => 'text-warning-700 bg-warning-500/10 dark:text-warning-500',\\n        default => $color,\\n    } : null),\\n    ((! ($isBadge || $url)) ? match ($color = $getColor($state)) {\\n        'danger' => 'text-danger-600',\\n        'gray' => 'text-gray-600 dark:text-gray-400',\\n        'info' => 'text-info-600',\\n        'primary' => 'text-primary-600',\\n        'secondary' => 'text-secondary-600',\\n        'success' => 'text-success-600',\\n        'warning' => 'text-warning-600',\\n        default => $color,\\n    } : null),\\n    ($isProse ? match ($size = $getSize($state)) {\\n        'sm' => 'prose-sm',\\n        'base', 'md', null => 'prose-base',\\n        'lg' => 'prose-lg',\\n        default => $size,\\n    } : match ($size = ($isBadge ? 'sm' : $getSize($state))) {\\n        'xs' => 'text-xs',\\n        'sm' => 'text-sm',\\n        'base', 'md', null => 'text-base',\\n        'lg' => 'text-lg',\\n        default => $size,\\n    }),\\n    match ($weight = ($isBadge ? 'medium' : $getWeight($state))) {\\n        'thin' => 'font-thin',\\n        'extralight' => 'font-extralight',\\n        'light' => 'font-light',\\n        'medium' => 'font-medium',\\n        'semibold' => 'font-semibold',\\n        'bold' => 'font-bold',\\n        'extrabold' => 'font-extrabold',\\n        'black' => 'font-black',\\n        default => $weight,\\n    },\\n    match ($getFontFamily($state)) {\\n        'sans' => 'font-sans',\\n        'serif' => 'font-serif',\\n        'mono' => 'font-mono',\\n        default => null,\\n    },\\n]\"],[\"__pint13\",\"$icon && $iconPosition === 'before'\"],[\"__pint14\",\"$icon\"],[\"__pint15\",\"$iconSize\"],[\"__pint16\",\"$isCopyable\"],[\"__pint17\",\"$formattedState\"],[\"__pint18\",\"$copyMessage\"],[\"__pint19\",\"$copyMessageDuration\"],[\"__pint20\",\"$formattedState\"],[\"__pint21\",\"$isCopyable\"],[\"__pint22\",\"$icon && $iconPosition === 'after'\"],[\"__pint23\",\"$icon\"],[\"__pint24\",\"$iconSize\"],[\"__pint25\",\"$isListWithLineBreaks ? 'li' : 'div'\"],[\"__pint26\",\"$limitedArrayStateCount = count($limitedArrayState ?? [])\"],[\"__pint27\",\"$isListWithLineBreaks ? 'li' : 'div'\"],[\"__pint28\",\"[\\n    'text-sm' => ! $isBadge,\\n    'text-xs' => $isBadge,\\n]\"],[\"__pint29\",\"trans_choice('filament-infolists::components.text.more_list_items', $limitedArrayStateCount)\"],[\"__pint30\",\"$isListWithLineBreaks ? 'li' : 'div'\"],[\"__pint31\",\"$isListWithLineBreaks ? 'ul' : 'div'\"]]","contentMapping":"[[\"$getEntryWrapperView()\",\"__pint0\"],[\"$entry\",\"__pint1\"],[\"\\n$isListWithLineBreaks=$isListWithLineBreaks();\\n\\n$isBadge=$isBadge();\\n\\n$isProse=$isProse();\\n\\n$arrayState=$getState();\\n\\nif($arrayStateinstanceof\\\\Illuminate\\\\Support\\\\Collection){\\n$arrayState=$arrayState->all();\\n}\\n\\nif(is_array($arrayState)){\\nif($listLimit=$getListLimit()){\\n$limitedArrayState=array_slice($arrayState,$listLimit);\\n$arrayState=array_slice($arrayState,0,$listLimit);\\n}\\n\\nif((!$isListWithLineBreaks)&&(!$isBadge)){\\n$arrayState=implode(\\n,,\\narray_map(\\nfn($value)=>$valueinstanceof\\\\Filament\\\\Support\\\\Contracts\\\\HasLabel?$value->getLabel():$value,\\n$arrayState,\\n),\\n);\\n}\\n}\\n$arrayState=\\\\Illuminate\\\\Support\\\\Arr::wrap($arrayState);\\n\\n$canWrap=$canWrap();\\n\\n$iconPosition=$getIconPosition();\\n$iconSize=$isBadge?h-3w-3:h-4w-4;\\n\\n$url=$getUrl();\\n\\n$isCopyable=$isCopyable();\\n$copyMessage=$getCopyMessage();\\n$copyMessageDuration=$getCopyMessageDuration();\\n\",\"__pint2\"],[\"$getPrefixActions()\",\"__pint3\"],[\"$getSuffixActions()\",\"__pint4\"],[\"([\\nfilament-infolists-text-entry,\\ntext-primary-600transitionhover:underlinehover:text-primary-500focus:underlinefocus:text-primary-500=>$url&&(!$isBadge),\\n])\",\"__pint5\"],[\"\\\\Filament\\\\Support\\\\prepare_inherited_attributes($getExtraAttributeBag())\",\"__pint6\"],[\"$isListWithLineBreaks?ul:div\",\"__pint7\"],[\"([\\nlist-insidelist-disc=>$isBulleted(),\\nflexflex-wrapgap-1=>$isBadge,\\n])\",\"__pint8\"],[\"\\n$formattedState=$formatState($state);\\n$icon=$getIcon($state);\\n\",\"__pint9\"],[\"(filled($formattedState))\",\"__pint10\"],[\"$isListWithLineBreaks?li:div\",\"__pint11\"],[\"([\\ninline-flexitems-centerspace-x-1rtl:space-x-reverse,\\nmin-h-6justify-centerwhitespace-nowraprounded-xlpx-2py-0.5=>$isBadge,\\nprosedark:prose-invertmax-w-none=>$isProse,\\nwhitespace-normal=>$canWrap,\\n($isBadge?match($color=$getColor($state)){\\ndanger=>text-danger-700bg-danger-500/10dark:text-danger-500,\\ngray,null=>bg-gray-500/10text-gray-700dark:bg-gray-500/20dark:text-gray-300,\\ninfo=>text-info-700bg-info-500/10dark:text-info-500,\\nprimary=>text-primary-700bg-primary-500/10dark:text-primary-500,\\nsecondary=>text-secondary-700bg-secondary-500/10dark:text-secondary-500,\\nsuccess=>text-success-700bg-success-500/10dark:text-success-500,\\nwarning=>text-warning-700bg-warning-500/10dark:text-warning-500,\\ndefault=>$color,\\n}:null),\\n((!($isBadge||$url))?match($color=$getColor($state)){\\ndanger=>text-danger-600,\\ngray=>text-gray-600dark:text-gray-400,\\ninfo=>text-info-600,\\nprimary=>text-primary-600,\\nsecondary=>text-secondary-600,\\nsuccess=>text-success-600,\\nwarning=>text-warning-600,\\ndefault=>$color,\\n}:null),\\n($isProse?match($size=$getSize($state)){\\nsm=>prose-sm,\\nbase,md,null=>prose-base,\\nlg=>prose-lg,\\ndefault=>$size,\\n}:match($size=($isBadge?sm:$getSize($state))){\\nxs=>text-xs,\\nsm=>text-sm,\\nbase,md,null=>text-base,\\nlg=>text-lg,\\ndefault=>$size,\\n}),\\nmatch($weight=($isBadge?medium:$getWeight($state))){\\nthin=>font-thin,\\nextralight=>font-extralight,\\nlight=>font-light,\\nmedium=>font-medium,\\nsemibold=>font-semibold,\\nbold=>font-bold,\\nextrabold=>font-extrabold,\\nblack=>font-black,\\ndefault=>$weight,\\n},\\nmatch($getFontFamily($state)){\\nsans=>font-sans,\\nserif=>font-serif,\\nmono=>font-mono,\\ndefault=>null,\\n},\\n])\",\"__pint12\"],[\"($icon&&$iconPosition===before)\",\"__pint13\"],[\"$icon\",\"__pint14\"],[\"$iconSize\",\"__pint15\"],[\"($isCopyable)\",\"__pint16\"],[\"($formattedState)\",\"__pint17\"],[\"($copyMessage)\",\"__pint18\"],[\"($copyMessageDuration)\",\"__pint19\"],[\"$formattedState\",\"__pint20\"],[\"($icon&&$iconPosition===after)\",\"__pint22\"],[\"($limitedArrayStateCount=count($limitedArrayState??[]))\",\"__pint26\"],[\"([\\ntext-sm=>!$isBadge,\\ntext-xs=>$isBadge,\\n])\",\"__pint28\"],[\"trans_choice(filament-infolists::components.text.more_list_items,$limitedArrayStateCount)\",\"__pint29\"]]"}